package com.ict.twitter.MessageBus;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.DeliveryMode;
import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TextMessage;

import org.apache.activemq.ActiveMQConnection;
import org.apache.activemq.ActiveMQConnectionFactory;

public class Sender implements MessageBussConnector {
	public Session session;
	public Destination destination;
	public MessageProducer producer;	
	public Connection connection;
	public Sender(String queue,boolean isTopic){
		ConnectionFactory connectionFactory = new ActiveMQConnectionFactory( 
                ActiveMQConnection.DEFAULT_USER, 
                ActiveMQConnection.DEFAULT_PASSWORD, 
                address); 
		try {
			connection= connectionFactory.createConnection();
			connection.start(); 
            session = connection.createSession(Boolean.TRUE, Session.CLIENT_ACKNOWLEDGE);
            if(isTopic)
            	destination= session.createTopic(queue); 
            else
            	destination= session.createQueue(queue); 
			
			producer=session.createProducer(destination); 
			producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
			
			
		} catch (JMSException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}
	
	public Sender(String queue){
		
		this(queue,false);
	}
	
	public void Exit(){
		try {
			
			session.close();
			connection.close();
		} catch (JMSException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	
	public boolean Send(String t){	
		if( (session!=null)&&(producer!=null)){			
			TextMessage message;
			try {				
				message = session.createTextMessage(t);				
				producer.send(message);
				session.commit();
				
			} catch (JMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
             //通过消息生产者发出消息 
		}else{
			System.out.println("服务器连接失败");
			return false;
		}
		
		
		return true;
	}

}
